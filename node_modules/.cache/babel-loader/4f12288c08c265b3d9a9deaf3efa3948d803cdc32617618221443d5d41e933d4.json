{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kieut\\\\OneDrive\\\\Desktop\\\\Source\\\\FrontEnd\\\\src\\\\Component\\\\Confirmation\\\\Confirmation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Confirmation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Confirmation = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [isLogin, setLogin] = useState(false);\n  const fetchUserData = async () => {\n    try {\n      const token = localStorage.getItem(\"auth-token\");\n      if (token) {\n        setLogin(true);\n      } else {\n        setLogin(false);\n      }\n      const email = localStorage.getItem(\"email\");\n      const resp = await fetch(`http://localhost:4000/profile/${email}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!resp) {\n        setLogin(false);\n        throw new Error(`Lỗi: ${response.status} - ${response.statusText}`);\n      }\n      const userData = await resp.json();\n      setUserData(userData.user);\n      if (userData.user.address) {\n        const addressParts = userData.user.address.split(\", \");\n        setAddress(addressParts[0]);\n        setSelectedWard(addressParts[1]);\n        setSelectedDistricts(addressParts[2]);\n\n        // Lấy tên tỉnh/thành phố bằng cách lấy phần còn lại của chuỗi sau khi loại bỏ phần đã lấy trước đó\n        const provinceAndRest = addressParts.slice(3).join(\", \");\n        setSelectedProvince(provinceAndRest);\n      }\n      setNameInput(userData.user.name);\n      setMailInput(userData.user.email);\n      setNumberPhone(userData.user.numberPhone);\n    } catch (error) {\n      setLogin(false);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(Confirmation, \"XmmnJT5U0O4F0DK0g89PryKiMtM=\");\n_c = Confirmation;\nexport default Confirmation;\nvar _c;\n$RefreshReg$(_c, \"Confirmation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Confirmation","_s","userData","setUserData","isLogin","setLogin","fetchUserData","token","localStorage","getItem","email","resp","fetch","headers","Authorization","Error","response","status","statusText","json","user","address","addressParts","split","setAddress","setSelectedWard","setSelectedDistricts","provinceAndRest","slice","join","setSelectedProvince","setNameInput","name","setMailInput","setNumberPhone","numberPhone","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kieut/OneDrive/Desktop/Source/FrontEnd/src/Component/Confirmation/Confirmation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Confirmation.css\";\r\n\r\nconst Confirmation = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [isLogin, setLogin] = useState(false);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"auth-token\");\r\n      if (token) {\r\n        setLogin(true);\r\n      } else {\r\n        setLogin(false);\r\n      }\r\n      const email = localStorage.getItem(\"email\");\r\n      const resp = await fetch(`http://localhost:4000/profile/${email}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!resp) {\r\n        setLogin(false);\r\n        throw new Error(`Lỗi: ${response.status} - ${response.statusText}`);\r\n      }\r\n      const userData = await resp.json();\r\n      setUserData(userData.user);\r\n      if (userData.user.address) {\r\n        const addressParts = userData.user.address.split(\", \");\r\n        setAddress(addressParts[0]);\r\n        setSelectedWard(addressParts[1]);\r\n        setSelectedDistricts(addressParts[2]);\r\n\r\n        // Lấy tên tỉnh/thành phố bằng cách lấy phần còn lại của chuỗi sau khi loại bỏ phần đã lấy trước đó\r\n        const provinceAndRest = addressParts.slice(3).join(\", \");\r\n        setSelectedProvince(provinceAndRest);\r\n      }\r\n      setNameInput(userData.user.name);\r\n      setMailInput(userData.user.email);\r\n      setNumberPhone(userData.user.numberPhone);\r\n    } catch (error) {\r\n      setLogin(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default Confirmation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,IAAIF,KAAK,EAAE;QACTF,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLA,QAAQ,CAAC,KAAK,CAAC;MACjB;MACA,MAAMK,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAE,iCAAgCF,KAAM,EAAC,EAAE;QACjEG,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,KAAM;QACjC;MACF,CAAC,CAAC;MACF,IAAI,CAACI,IAAI,EAAE;QACTN,QAAQ,CAAC,KAAK,CAAC;QACf,MAAM,IAAIU,KAAK,CAAE,QAAOC,QAAQ,CAACC,MAAO,MAAKD,QAAQ,CAACE,UAAW,EAAC,CAAC;MACrE;MACA,MAAMhB,QAAQ,GAAG,MAAMS,IAAI,CAACQ,IAAI,CAAC,CAAC;MAClChB,WAAW,CAACD,QAAQ,CAACkB,IAAI,CAAC;MAC1B,IAAIlB,QAAQ,CAACkB,IAAI,CAACC,OAAO,EAAE;QACzB,MAAMC,YAAY,GAAGpB,QAAQ,CAACkB,IAAI,CAACC,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;QACtDC,UAAU,CAACF,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3BG,eAAe,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC;QAChCI,oBAAoB,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;;QAErC;QACA,MAAMK,eAAe,GAAGL,YAAY,CAACM,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;QACxDC,mBAAmB,CAACH,eAAe,CAAC;MACtC;MACAI,YAAY,CAAC7B,QAAQ,CAACkB,IAAI,CAACY,IAAI,CAAC;MAChCC,YAAY,CAAC/B,QAAQ,CAACkB,IAAI,CAACV,KAAK,CAAC;MACjCwB,cAAc,CAAChC,QAAQ,CAACkB,IAAI,CAACe,WAAW,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd/B,QAAQ,CAAC,KAAK,CAAC;IACjB;EACF,CAAC;EACDR,SAAS,CAAC,MAAM;IACdS,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOP,OAAA;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB,CAAC;AAACvC,EAAA,CA9CID,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}